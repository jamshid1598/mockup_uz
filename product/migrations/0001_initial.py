# Generated by Django 3.1.5 on 2021-03-09 13:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('slug', models.SlugField(max_length=250, verbose_name='Slug')),
                ('image', models.ImageField(blank=True, null=True, upload_to='category-image/%d/%m/%Y/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, max_length=300, null=True, verbose_name='Caption')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product-image/%d/%m/%Y/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, max_length=300, null=True, verbose_name='Caption')),
            ],
        ),
        migrations.CreateModel(
            name='MockUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='mockup-file/%d/%m/%Y/', verbose_name='MockUp File')),
                ('resolution', models.CharField(blank=True, max_length=50, null=True, verbose_name='Resolution')),
                ('extension', models.CharField(blank=True, max_length=10, null=True, verbose_name='Extension')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('slug', models.SlugField(max_length=300, unique=True, verbose_name='Slug')),
                ('description', models.TextField(verbose_name='Description')),
                ('price', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000000)], verbose_name='Price')),
                ('discount', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000000)], verbose_name='Discount')),
                ('paid', models.BooleanField(default=True, verbose_name='Paid')),
                ('free', models.BooleanField(default=False, verbose_name='Free')),
                ('downloaded', models.SmallIntegerField(default=0)),
                ('published_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_category', to='product.category', verbose_name='Category')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=50, verbose_name='Tag Name')),
            ],
        ),
        migrations.CreateModel(
            name='UserViews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visitor_ip', models.GenericIPAddressField(default='0.0.0.0')),
                ('mockup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_views', to='product.product', verbose_name='Product')),
            ],
        ),
    ]
